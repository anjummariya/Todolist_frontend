{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Desktop\\\\ToDo_App\\\\frontend\\\\todolist\\\\src\\\\components\\\\TodoList.js\",\n  _s = $RefreshSig$();\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashCan, faPen } from '@fortawesome/free-solid-svg-icons';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  todos,\n  handleDelete,\n  handleEdit\n}) => {\n  _s();\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const toggleTaskCompletion = taskId => {\n    if (completedTasks.includes(taskId)) {\n      setCompletedTasks(completedTasks.filter(id => id !== taskId));\n    } else {\n      setCompletedTasks([...completedTasks, taskId]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"allTodos\",\n    children: todos.map(t => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: `singleTodo ${completedTasks.includes(t._id) ? 'completed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        checked: completedTasks.includes(t._id),\n        onChange: () => toggleTaskCompletion(t._id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"todoText\",\n        children: t.todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this), !completedTasks.includes(t._id) &&\n      /*#__PURE__*/\n      // Render the Edit button only for incomplete tasks\n      _jsxDEV(\"button\", {\n        onClick: () => handleEdit(t._id),\n        className: \"bn3637 bn37\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faPen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(t._id),\n        className: \"bn3637 bn37\",\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faTrashCan\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, t._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"vzvJjits3kLZbogJVSf28qkvix8=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["FontAwesomeIcon","faTrashCan","faPen","useState","jsxDEV","_jsxDEV","TodoList","todos","handleDelete","handleEdit","_s","completedTasks","setCompletedTasks","toggleTaskCompletion","taskId","includes","filter","id","className","children","map","t","_id","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","todo","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Desktop/ToDo_App/frontend/todolist/src/components/TodoList.js"],"sourcesContent":["import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashCan, faPen } from '@fortawesome/free-solid-svg-icons';\r\nimport { useState } from 'react';\r\n\r\nconst TodoList = ({ todos, handleDelete, handleEdit }) => {\r\n  const [completedTasks, setCompletedTasks] = useState([]);\r\n\r\n  const toggleTaskCompletion = (taskId) => {\r\n    if (completedTasks.includes(taskId)) {\r\n      setCompletedTasks(completedTasks.filter((id) => id !== taskId));\r\n    } else {\r\n      setCompletedTasks([...completedTasks, taskId]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ul className=\"allTodos\">\r\n      {todos.map((t) => (\r\n        <li className={`singleTodo ${completedTasks.includes(t._id) ? 'completed' : ''}`} key={t._id}>\r\n          <input\r\n            type=\"checkbox\"\r\n            checked={completedTasks.includes(t._id)}\r\n            onChange={() => toggleTaskCompletion(t._id)}\r\n          />\r\n          <span className=\"todoText\">{t.todo}</span>\r\n          {!completedTasks.includes(t._id) && ( // Render the Edit button only for incomplete tasks\r\n            <button onClick={() => handleEdit(t._id)} className=\"bn3637 bn37\">\r\n              <FontAwesomeIcon icon={faPen} />\r\n            </button>\r\n          )}\r\n          <button onClick={() => handleDelete(t._id)} className=\"bn3637 bn37\">\r\n            <FontAwesomeIcon icon={faTrashCan} />\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n"],"mappings":";;AAAA,SAASA,eAAe,QAAQ,gCAAgC;AAChE,SAASC,UAAU,EAAEC,KAAK,QAAQ,mCAAmC;AACrE,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,KAAK;EAAEC,YAAY;EAAEC;AAAW,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMU,oBAAoB,GAAIC,MAAM,IAAK;IACvC,IAAIH,cAAc,CAACI,QAAQ,CAACD,MAAM,CAAC,EAAE;MACnCF,iBAAiB,CAACD,cAAc,CAACK,MAAM,CAAEC,EAAE,IAAKA,EAAE,KAAKH,MAAM,CAAC,CAAC;IACjE,CAAC,MAAM;MACLF,iBAAiB,CAAC,CAAC,GAAGD,cAAc,EAAEG,MAAM,CAAC,CAAC;IAChD;EACF,CAAC;EAED,oBACET,OAAA;IAAIa,SAAS,EAAC,UAAU;IAAAC,QAAA,EACrBZ,KAAK,CAACa,GAAG,CAAEC,CAAC,iBACXhB,OAAA;MAAIa,SAAS,EAAG,cAAaP,cAAc,CAACI,QAAQ,CAACM,CAAC,CAACC,GAAG,CAAC,GAAG,WAAW,GAAG,EAAG,EAAE;MAAAH,QAAA,gBAC/Ed,OAAA;QACEkB,IAAI,EAAC,UAAU;QACfC,OAAO,EAAEb,cAAc,CAACI,QAAQ,CAACM,CAAC,CAACC,GAAG,CAAE;QACxCG,QAAQ,EAAEA,CAAA,KAAMZ,oBAAoB,CAACQ,CAAC,CAACC,GAAG;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFxB,OAAA;QAAMa,SAAS,EAAC,UAAU;QAAAC,QAAA,EAAEE,CAAC,CAACS;MAAI;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,EACzC,CAAClB,cAAc,CAACI,QAAQ,CAACM,CAAC,CAACC,GAAG,CAAC;MAAA;MAAM;MACpCjB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAMtB,UAAU,CAACY,CAAC,CAACC,GAAG,CAAE;QAACJ,SAAS,EAAC,aAAa;QAAAC,QAAA,eAC/Dd,OAAA,CAACL,eAAe;UAACgC,IAAI,EAAE9B;QAAM;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B,CACT,eACDxB,OAAA;QAAQ0B,OAAO,EAAEA,CAAA,KAAMvB,YAAY,CAACa,CAAC,CAACC,GAAG,CAAE;QAACJ,SAAS,EAAC,aAAa;QAAAC,QAAA,eACjEd,OAAA,CAACL,eAAe;UAACgC,IAAI,EAAE/B;QAAW;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GAd4ER,CAAC,CAACC,GAAG;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAexF,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACnB,EAAA,CAjCIJ,QAAQ;AAAA2B,EAAA,GAAR3B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}